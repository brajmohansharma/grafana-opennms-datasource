{"version":3,"sources":["../src/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["import {QueryType} from './constants';\nimport {interpolate} from \"./interpolate\";\nimport _ from 'lodash';\n\nexport class OpenNMSDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n\n    this.searchLimit = 25;\n    this.target = {};\n  }\n\n  query(options) {\n    // Generate the query\n    var query = this.buildQuery(options);\n\n    // Issue the request\n    var request;\n    if (query.source.length > 0) {\n      request = this.backendSrv.datasourceRequest({\n        url: this.url + '/rest/measurements',\n        data: query,\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'}\n      });\n    } else {\n      // There are no sources listed, use an empty set of measurements\n      request = this.$q.defer();\n      request.resolve({measurements: []});\n    }\n\n    // Convert the results to the expected format\n    return this.$q.when(request).then(function (response) {\n      if (response.status !== 200) {\n        throw { message: 'Query failed.' };\n      }\n      return OpenNMSDatasource.processMeasurementsResponse(response);\n    });\n  }\n\n  // Used for testing the connection from the datasource configuration page\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/rest/info',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return {status: \"success\", message: \"Data source is working!\", title: \"Success\"};\n      }\n    });\n  }\n\n  // Used by template queries\n  metricFindQuery(query) {\n    var interpolatedQuery = _.first(this.interpolateValue(query));\n    var nodeFilterRegex = /nodeFilter\\((.*)\\)/;\n    var nodeResourcesRegex = /nodeResources\\((.*)\\)/;\n\n    if (interpolatedQuery !== undefined) {\n      var nodeFilterQuery = interpolatedQuery.match(nodeFilterRegex);\n      if (nodeFilterQuery) {\n        return this.metricFindNodeFilterQuery(nodeFilterQuery[1]);\n      }\n\n      var nodeCriteria = interpolatedQuery.match(nodeResourcesRegex);\n      if (nodeCriteria) {\n        return this.metricFindNodeResourceQuery(nodeCriteria[1]);\n      }\n    }\n\n    return this.$q.reject(\"Unsupported query \" + interpolatedQuery);\n  }\n\n  metricFindNodeFilterQuery(query) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/rest/nodes',\n      method: 'GET',\n      params: {\n        filterRule: query\n      }\n    }).then(function (response) {\n      if (response.data.count > response.data.totalCount) {\n        console.warn(\"Filter matches \" + response.data.totalCount + \" records, but only \" + response.data.count + \" will be used.\");\n      }\n      var results = [];\n      _.each(response.data.node, function (node) {\n        var nodeCriteria = node.id.toString();\n        if (node.foreignId !== null && node.foreignSource !== null) {\n          nodeCriteria = node.foreignSource + \":\" + node.foreignId;\n        }\n        results.push({text: nodeCriteria, expandable: true});\n      });\n      return results;\n    });\n  }\n\n  metricFindNodeResourceQuery(query) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/rest/resources/' + encodeURIComponent(OpenNMSDatasource.getNodeResource(query)),\n      method: 'GET',\n      params: {\n        depth: 1\n      }\n    }).then(function (response) {\n      var results = [];\n      _.each(response.data.children.resource, function (resource) {\n        var resourceWithoutNodePrefix = resource.id.match(/node(Source)?\\[.*?\\]\\.(.*)/);\n        if (resourceWithoutNodePrefix) {\n          results.push({text: resourceWithoutNodePrefix[2], expandable: true});\n        }\n      });\n      return results;\n    });\n  }\n\n  buildQuery(options) {\n    var self = this,\n      start = options.range.from.valueOf(),\n      end = options.range.to.valueOf(),\n      step = Math.floor((end - start) / options.maxDataPoints);\n\n    var query = {\n      \"start\": start,\n      \"end\": end,\n      \"step\": step,\n      \"maxrows\": options.maxDataPoints,\n      \"source\": [],\n      \"expression\": []\n    };\n\n    _.each(options.targets, function (target) {\n      var transient = \"false\";\n      if (target.hide) {\n        transient = true;\n      }\n\n      if (target.type === QueryType.Attribute) {\n        if (!((target.nodeId && target.resourceId && target.attribute))) {\n          return;\n        }\n\n        var label = target.label;\n        if (label === undefined || label === '') {\n          label = target.attribute;\n        }\n\n        // Build the source\n        var source = {\n          \"aggregation\": target.aggregation,\n          \"attribute\": target.attribute,\n          \"label\": label,\n          \"resourceId\": target.resourceId,\n          \"nodeId\": target.nodeId, // temporary attribute used for interpolation\n          \"transient\": transient\n        };\n\n        if (target.subattribute !== undefined && target.subattribute !== '') {\n          source.datasource = target.subattribute;\n        }\n\n        // Perform variable substitution - may generate additional queries\n        query.source = query.source.concat(self.interpolateSourceVariables(source, (interpolatedSource) => {\n          // Calculate the effective resource id after the interpolation\n          interpolatedSource.resourceId = OpenNMSDatasource.getRemoteResourceId(interpolatedSource.nodeId, interpolatedSource.resourceId);\n          delete interpolatedSource.nodeId;\n        }));\n      } else if (target.type === QueryType.Expression) {\n        if (!((target.label && target.expression))) {\n          return;\n        }\n\n        // Build the expression\n        var expression = {\n          \"label\": target.label,\n          \"value\": target.expression,\n          \"transient\": transient\n        };\n\n        // Perform variable substitution - may generate additional expressions\n        query.expression = query.expression.concat(self.interpolateExpressionVariables(expression));\n      } else if (target.type === QueryType.Filter) {\n        if (!((target.filter))) {\n          return;\n        }\n\n        // Interpolate the filter parameters\n        var interpolatedFilterParms = self.interpolateVariables(target.filterParameters, _.keys(target.filterParameters));\n\n        var filters = _.map(interpolatedFilterParms, (filterParms) => {\n          // Build the filter definition\n          var parameters = [];\n          _.each(filterParms, function (value, key) {\n            // Skip parameters with undefined or empty values\n            if (value === undefined || value === '' || value === null) {\n              return;\n            }\n\n            parameters.push({\n              'key': key,\n              'value': value\n            });\n          });\n\n          return {\n            \"name\": target.filter.name,\n            \"parameter\": parameters\n          };\n        });\n\n        // Only add the filter attribute to the query when one or more filters are specified since\n        // OpenNMS versions before 17.0.0 do not support it\n        if (!query.filter) {\n          query.filter = filters;\n        } else {\n          query.filter = query.filter.concat(filters);\n        }\n      }\n    });\n\n    return query;\n  }\n\n  interpolateSourceVariables(source, callback) {\n    return this.interpolateVariables(source, ['nodeId', 'resourceId', 'attribute', 'datasource', 'label'], callback);\n  }\n\n  interpolateExpressionVariables(expression) {\n    return this.interpolateVariables(expression, ['value', 'label']);\n  }\n\n  interpolateValue(value) {\n    return _.map(this.interpolateVariables({'value': value}, ['value']), function(entry) {\n      return entry.value;\n    });\n  }\n\n  interpolateVariables(object, attributes, callback) {\n    // Reformat the variables to work with our interpolate function\n    var variables = [];\n    _.each(this.templateSrv.variables, function(templateVariable) {\n      var variable = {\n        name: templateVariable.name,\n        value: []\n      };\n\n      // Single-valued?\n      if (_.isString(templateVariable.current.value)) {\n        variable.value.push(templateVariable.current.value);\n      } else {\n        _.each(templateVariable.current.value, function(value) {\n          if (value === \"$__all\") {\n            _.each(templateVariable.options, function(option) {\n              // \"All\" is part of the options, so make sure to skip that one\n              if (option.value !== \"$__all\") {\n                variable.value.push(option.value);\n              }\n            });\n          } else {\n            variable.value.push(value);\n          }\n        });\n      }\n\n      variables.push(variable);\n    });\n    return interpolate(object, attributes, variables, callback);\n  }\n\n  static processMeasurementsResponse(response) {\n    var labels = response.data.labels;\n    var columns = response.data.columns;\n    var timestamps = response.data.timestamps;\n    var series = [];\n    var i, j, nRows, nCols, datapoints;\n\n    if (timestamps !== undefined) {\n      nRows = timestamps.length;\n      nCols = columns.length;\n\n      for (i = 0; i < nCols; i++) {\n        datapoints = [];\n        for (j = 0; j < nRows; j++) {\n          // Skip rows that are out-of-ranges - this can happen with RRD data in narrow time spans\n          if (timestamps[j] < response.data.start || timestamps[j] > response.data.end) {\n            continue;\n          }\n\n          datapoints.push([columns[i].values[j], timestamps[j]]);\n        }\n\n        series.push({\n          target: labels[i],\n          datapoints: datapoints\n        });\n      }\n    }\n\n    return {data: series};\n  }\n\n  static flattenResourcesWithAttributes(resources, resourcesWithAttributes) {\n    _.each(resources, function (resource) {\n      if (resource.rrdGraphAttributes !== undefined && Object.keys(resource.rrdGraphAttributes).length > 0) {\n        resourcesWithAttributes.push(resource);\n      }\n      if (resource.children !== undefined && resource.children.resource.length > 0) {\n        OpenNMSDatasource.flattenResourcesWithAttributes(resource.children.resource, resourcesWithAttributes);\n      }\n    });\n    return resourcesWithAttributes;\n  }\n\n  static getNodeResource(nodeId) {\n    var prefix = \"\";\n    if (nodeId.indexOf(\":\") > 0) {\n      prefix = \"nodeSource[\";\n    } else {\n      prefix = \"node[\";\n    }\n    return prefix + nodeId + \"]\";\n  }\n\n  static getRemoteResourceId(nodeId, resourceId) {\n    return OpenNMSDatasource.getNodeResource(nodeId) + \".\" + resourceId;\n  }\n\n  searchForNodes(query) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/rest/nodes',\n      method: 'GET',\n      params: {\n        limit: this.searchLimit,\n        match: 'any',\n        comparator: 'ilike',\n        orderBy: 'id',\n        order: 'asc',\n        label: '%' + query + '%',\n        sysName: '%' + query + '%',\n        'ipInterface.ipAddress': '%' + query + '%',\n        'ipInterface.ipHostName': '%' + query + '%',\n        'foreignId': query + '%' // doesn't support leading '%'\n      }\n    });\n  }\n\n  getResourcesWithAttributesForNode(nodeId) {\n    var interpolatedNodeId = _.first(this.interpolateValue(nodeId));\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/rest/resources/fornode/' + encodeURIComponent(interpolatedNodeId),\n      method: 'GET',\n      params: {\n        depth: -1\n      }\n    }).then(function (results) {\n      return OpenNMSDatasource.flattenResourcesWithAttributes([results.data], []);\n    });\n  }\n\n  getAvailableFilters() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/rest/measurements/filters',\n      method: 'GET'\n    });\n  }\n\n  suggestAttributes(nodeId, resourceId, query) {\n    var interpolatedNodeId = _.first(this.interpolateValue(nodeId)),\n        interpolatedResourceId = _.first(this.interpolateValue(resourceId));\n    var remoteResourceId = OpenNMSDatasource.getRemoteResourceId(interpolatedNodeId, interpolatedResourceId);\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/rest/resources/' + encodeURIComponent(remoteResourceId),\n      method: 'GET',\n      params: {\n        depth: -1\n      }\n    }).then(function (results) {\n      query = query.toLowerCase();\n\n      var attributes = [];\n      _.each(results.data.rrdGraphAttributes, function (value, key) {\n        if (key.toLowerCase().indexOf(query) >= 0) {\n          attributes.push(key);\n        }\n      });\n      attributes.sort();\n\n      return attributes;\n    });\n  }\n}\n"]}