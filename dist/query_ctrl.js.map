{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import './modal_ctrl';\nimport {QueryType} from './constants';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\n\nexport class OpenNMSQueryCtrl extends QueryCtrl {\n\n  constructor($rootScope, $scope, $injector, $q, $modal) {\n    super($scope, $injector);\n\n    this.types = QueryType;\n\n    this.error = this.validateTarget();\n    this.$rootScope = $rootScope;\n    this.$q = $q;\n    this.$modal = $modal;\n  }\n\n  openNodeSelectionModal() {\n    var self = this;\n    this.showSelectionModal(\"nodes\", {\n      '#': 'id',\n      'Label': 'label',\n      'Foreign ID': 'foreignId',\n      'sysName': 'sysName'\n    }, function (query) {\n      return self.datasource\n        .searchForNodes(query)\n        .then(function (results) {\n          return {\n            'count': results.data.count,\n            'totalCount': results.data.totalCount,\n            'rows': results.data.node\n          };\n        });\n    }, function (node) {\n      if (!_.isUndefined(node.foreignId) && !_.isNull(node.foreignId)\n        && !_.isUndefined(node.foreignSource) && !_.isNull(node.foreignSource)) {\n        // Prefer fs:fid\n        self.target.nodeId = node.foreignSource + \":\" + node.foreignId;\n      } else {\n        // Fallback to node id\n        self.target.nodeId = node.id;\n      }\n      self.targetBlur();\n    });\n  }\n\n  openResourceSelectionModal() {\n    var self = this;\n\n    function filterResources(resources, query) {\n      var filteredResources = resources;\n      if (query.length >= 1) {\n        query = query.toLowerCase();\n        filteredResources = _.filter(resources, function (resource) {\n          return resource.key.indexOf(query) >= 0;\n        });\n      }\n\n      // Limit the results - it takes along time to render if there are too many\n      var totalCount = filteredResources.length;\n      filteredResources = _.first(filteredResources, self.datasource.searchLimit);\n\n      return {\n        'count': filteredResources.length,\n        'totalCount': totalCount,\n        'rows': filteredResources\n      };\n    }\n\n    self.nodeResources = undefined;\n    this.showSelectionModal(\"resources\", {\n      'Label': 'label',\n      'Name': 'name'\n    }, function (query) {\n      if (self.nodeResources !== undefined) {\n        var deferred = self.$q.defer();\n        deferred.resolve(filterResources(self.nodeResources, query));\n        return deferred.promise;\n      }\n\n      return self.datasource.getResourcesWithAttributesForNode(self.target.nodeId)\n        .then(function (resources) {\n          // Compute a key for more efficient searching\n          _.each(resources, function (resource) {\n            resource.key = resource.label.toLowerCase() + resource.name.toLowerCase();\n          });\n          // Sort the list once\n          self.nodeResources = _.sortBy(resources, function (resource) {\n            return resource.label;\n          });\n          // Filter\n          return filterResources(self.nodeResources, query);\n        });\n    }, function (resource) {\n      // Exclude the node portion of the resource id\n      var re = /node(Source)?\\[.*?]\\.(.*)$/;\n      var match = re.exec(resource.id);\n      self.target.resourceId = match[2];\n      self.targetBlur();\n    });\n  }\n\n  openAttributeSelectionModal() {\n    var self = this;\n    this.showSelectionModal(\"attributes\", {\n      'Name': 'name'\n    }, function (query) {\n      return self.datasource\n        .suggestAttributes(self.target.nodeId, self.target.resourceId, query)\n        .then(function (attributes) {\n          var namedAttributes = [];\n          _.each(attributes, function (attribute) {\n            namedAttributes.push({'name': attribute});\n          });\n\n          return {\n            'count': namedAttributes.length,\n            'totalCount': namedAttributes.length,\n            'rows': namedAttributes\n          };\n        });\n    }, function (attribute) {\n      self.target.attribute = attribute.name;\n      self.targetBlur();\n    });\n  }\n\n  openFilterSelectionModal() {\n    var self = this;\n    this.showSelectionModal(\"filters\", {\n      'Name': 'name',\n      'Description': 'description',\n      'Backend': 'backend'\n    }, function () {\n      return self.datasource\n        .getAvailableFilters()\n        .then(function (results) {\n          return {\n            'count': results.data.length,\n            'totalCount': results.data.length,\n            'rows': results.data\n          };\n        });\n    }, function (filter) {\n      self.target.filter = filter;\n      self.targetBlur();\n    });\n  }\n\n  showSelectionModal(label, columns, search, callback) {\n    var scope = this.$rootScope.$new();\n\n    scope.label = label;\n    scope.columns = columns;\n    scope.search = search;\n\n    scope.result = this.$q.defer();\n    scope.result.promise.then(callback);\n\n    var modal = this.$modal({\n      template: 'public/plugins/opennms-datasource/partials/modal.selection.html',\n      persist: false,\n      show: false,\n      scope: scope,\n      keyboard: false\n    });\n    this.$q.when(modal).then(function (modalEl) { modalEl.modal('show'); });\n  }\n\n  targetBlur() {\n    this.error = this.validateTarget();\n    this.refresh();\n  }\n\n  validateTarget() {\n    if (this.target.type === QueryType.Attribute) {\n      if (!this.target.nodeId) {\n        return \"You must supply a node id.\";\n      } else if (!this.target.resourceId) {\n        return \"You must supply a resource id.\";\n      } else if (!this.target.attribute) {\n        return \"You must supply an attribute.\";\n      }\n    } else if (this.target.type === QueryType.Expression) {\n      if (!this.target.label) {\n        return \"You must supply a label.\";\n      } else if (!this.target.expression) {\n        return \"You must supply an expression.\";\n      }\n    } else if (this.target.type === QueryType.Filter) {\n      if (!this.target.filter) {\n        return \"You must select a filter.\";\n      }\n    } else {\n      return \"Invalid type.\";\n    }\n\n    return undefined;\n  }\n\n  getCollapsedText() {\n    if (this.target.type === QueryType.Attribute) {\n      return \"Attribute: \" + this.target.attribute;\n    } else if (this.target.type === QueryType.Expression) {\n      return \"Expression: \" + this.target.label;\n    } else if (this.target.type === QueryType.Filter) {\n      return \"Filter: \" + this.target.filter.name;\n    } else {\n      return \"<Incomplete>\";\n    }\n  }\n}\n\nOpenNMSQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}